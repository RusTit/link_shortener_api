name: link shortener tests

on: [ push ]

jobs:
  tests:

    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        node-version: [ 14.x ]

    services:
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379

      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: db_username
          POSTGRES_PASSWORD: db_password
          POSTGRES_DB: db_name
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      DATABASE_URL: postgres://db_username:db_password@localhost:5432/db_name
      NODE_ENV: test
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_SECRET: ${{ secrets.GOOGLE_SECRET }}
      GOOGLE_CALLBACK_URL: ${{ secrets.GOOGLE_CALLBACK_URL }}

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Yarn and Typeorm
        run: npm install -g yarn typeorm

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ matrix.node-version }}-

      - name: Install dependecies
        run: yarn install

      - name: Build
        run: yarn build

      - name: Run migrations
        run: typeorm migration:run

      - name: Run tests
        run: yarn test

      - name: Run e2e tests
        run: yarn test:e2e
